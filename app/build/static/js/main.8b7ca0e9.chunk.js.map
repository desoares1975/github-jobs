{"version":3,"sources":["actions/index.js","actions/types.js","components/search/index.js","components/item/index.js","components/list/index.js","App.js","serviceWorker.js","reducers/click-reducer.js","reducers/index.js","store/index.js","index.js"],"names":["apiUrl","concat","process","initialState","description","location","fullTime","list","total","data","fetchJobs","jobs","type","Search","withStyles","theme","button","height","fontFamily","fontSize","fontWeight","color","background","border","borderRadius","cursor","container","backgroundColor","display","flexWrap","margin","spacing","unit","checkbox","padding","cssLabel","&$cssFocused","purple","cssFocused","bootstrapRoot","label + &","marginTop","bootstrapInput","palette","common","white","transition","transitions","create","join","&:focus","borderColor","boxShadow","bootstrapFormLabel","props","classes","loading","checked","dispatch","changeInput","changeBox","react_default","a","createElement","className","FormControl_default","InputLabel_default","shrink","htmlFor","InputBase_default","id","name","onChange","defaultValue","root","input","value","Button_default","onClick","state","arguments","length","undefined","axios","post","headers","Authorization","then","response","catch","error","fetchAllJobs","item","_ref","title","enterprise","since","link","Card_default","CardContent_default","style","float","maxWidth","Typography_default","variant","gutterBottom","textAlign","CardActions_default","window","components_list","result","map","i","key","company","created_at","url","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","e","_this$setState","setState","defineProperty","target","_this$state","paddingTop","CircularProgress_default","Component","connect","store","clickState","Boolean","hostname","match","Reducers","combineReducers","action","objectSpread","Store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b7ca0e9.chunk.js","sourcesContent":["import { SEND_QUERY } from './types';\nimport axios from 'axios';\n\nconst apiUrl = `${process.env.REACT_APP_API_PATH}/search`;\nconst initialState = {\n  description: '',\n  location: '',\n  fullTime: false,\n  list: {total: 0, data: []}\n};\n\nconst fetchJobs = (jobs) => {\n  return {\n    type: SEND_QUERY,\n    jobs\n  }\n};\n\nexport default function fetchAllJobs(state = initialState) {\n  return (dispatch) => {\n\n    return axios.post(apiUrl, state, {\n      headers: {\n        'Authorization': `Basic QVdXQ29yOnNlY3JldA==`\n      }\n    })\n      .then(response => {\n        dispatch(fetchJobs(response.data))\n      })\n      .catch(error => {\n        throw(error);\n      });\n  };\n};\n","export const SEND_QUERY = 'SEND_QUERY';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport purple from '@material-ui/core/colors/purple';\nimport fetchAllJobs from '../../actions';\n\nconst styles = theme => ({\n  button: {\n    height: 10,\n    fontFamily: ['Helvetica', 'Arial', 'sans-serif'],\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: '#fff',\n    background: '#869ca9',\n    border: 'none',\n    borderRadius: 3,\n    cursor: 'pointer'\n},\n  container: {\n    backgroundColor: '#f8f8f8',\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  checkbox: {\n    margin: theme.spacing.unit,\n    fontSize: 13,\n    padding: '35px 12px',\n  },\n  cssLabel: {\n    '&$cssFocused': {\n      color: purple[500],\n    },\n  },\n  cssFocused: {},\n  bootstrapRoot: {\n    'label + &': {\n      marginTop: theme.spacing.unit * 3,\n    },\n  },\n  bootstrapInput: {\n    borderRadius: 4,\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n  bootstrapFormLabel: {\n    fontSize: 18,\n  },\n});\n\nfunction CustomizedInputs(props) {\n  const {\n    classes,\n    description,\n    location,\n    loading,\n    checked,\n    dispatch,\n    changeInput,\n    changeBox\n  } = props;\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.margin}>\n        <InputLabel shrink htmlFor=\"bootstrap-input\" className={classes.bootstrapFormLabel}>\n          Job Description\n        </InputLabel>\n        <InputBase\n          id=\"description\"\n          name=\"description\"\n          onChange={changeInput}\n          defaultValue={description}\n          classes={{\n            root: classes.bootstrapRoot,\n            input: classes.bootstrapInput,\n          }}\n        />\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel shrink htmlFor=\"bootstrap-input\" className={classes.bootstrapFormLabel}>\n          Location\n        </InputLabel>\n        <InputBase\n          id=\"location\"\n          name=\"location\"\n          onChange={changeInput}\n          defaultValue={location}\n          classes={{\n            root: classes.bootstrapRoot,\n            input: classes.bootstrapInput,\n          }}\n        />\n      </FormControl>\n      <div className={classes.checkbox}>\n        <input type=\"checkbox\" onChange={changeBox} value={checked} name=\"fullTime\" /> Full Time Only\n      </div>\n      <div className={classes.checkbox}>\n        <Button className={classes.button} onClick={() => {\n          loading()\n          dispatch(fetchAllJobs({description, location, fullTime: checked, loading}))}\n        } >\n          Search\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nCustomizedInputs.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport const Search = withStyles(styles)(CustomizedInputs);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nexport default ({title, enterprise, type, location, since, link}) => (\n    <div>\n      <Card>\n        <CardContent>\n          <div style={{float: 'left', maxWidth: '50%'}}>\n            <Typography variant=\"subtitle1\" >\n              {title}\n            </Typography>\n            <Typography  color=\"textSecondary\" gutterBottom>\n              {enterprise} - {type}\n            </Typography>\n          </div>\n          <div style={{float: 'right', textAlign: 'right'}}>\n            <Typography  color=\"textSecondary\" gutterBottom>\n              {location}\n            </Typography>\n            <Typography  color=\"textSecondary\" gutterBottom>\n              {since}\n            </Typography>\n          </div>\n        </CardContent>\n        <CardActions>\n          <br/>\n          <Button onClick={() => window.location = link}>More</Button>\n        </CardActions>\n      </Card>\n      <br />\n    </div>\n  )\n","import React from 'react';\nimport Item from '../item';\n\nexport default ({result}) => (\n  <div className=\"results\">\n    <h2>{result.total ? `Showing ${result.total} jobs` : 'Nothing found'}</h2>\n    {result && result.total && result.data.map((a, i) => (\n      <Item\n        key={a.id}\n        title={a.title}\n        enterprise={a.company}\n        type={a.type}\n        location={a.location}\n        since={a.created_at}\n        link={a.url}\n      />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Search } from './components/search';\nimport Lister from './components/list';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: '',\n      location: '',\n      checked: false,\n      fullTime: false,\n      loading: false\n    };\n\n    this.changeInput = this.changeInput.bind(this);\n    this.changeBox = this.changeBox.bind(this);\n    this.loading = this.loading.bind(this);\n  }\n\n  changeInput(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n      loading: false\n    });\n  }\n\n  changeBox() {\n    this.setState({\n      checked: !this.state.checked\n    });\n  }\n\n  loading() {\n    this.setState({\n      loading: !this.state.loading\n    });\n  }\n\n  render() {\n    const { list } = this.props;\n    const { description, location, fullTime, checked } = this.state;\n\n    return (\n      <div>\n        <div className=\"App\" style={{ paddingTop: 20 }}>\n          <div className=\"outter\">\n            <Search\n              description={description}\n              location={location}\n              fullTime={fullTime}\n              checked={checked}\n              loading={this.loading}\n              changeInput={this.changeInput}\n              changeBox={this.changeBox}\n              dispatch={this.props.dispatch}\n            />\n            <div style={{textAlign: 'center'}}>\n              {this.state.loading && list.total === 0 && <CircularProgress />}\n              {list.total > 0 && <Lister result={list} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  list: store.clickState.list\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SEND_QUERY } from '../actions/types';\n\nconst initialState = {\n  description: '',\n  location: '',\n  fullTime: false,\n  list: {total:0, data: []}\n};\n\nexport const clickReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case SEND_QUERY:\n      return {\n        ...state,\n        list: action.jobs\n      };\n    default:\n      return state;\n  }\n}\n","import { clickReducer } from './click-reducer';\nimport { combineReducers } from 'redux';\n\nexport const Reducers = combineReducers({\n  clickState: clickReducer\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { Reducers } from '../reducers';\nimport thunk from \"redux-thunk\";\n\nexport const Store  = createStore(Reducers, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { Store } from './store';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}